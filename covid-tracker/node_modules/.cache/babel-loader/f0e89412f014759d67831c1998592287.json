{"ast":null,"code":"var _jsxFileName = \"/Projects/covid-tracker/covid-tracker/src/util.js\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst casesTypeColors = {\n  cases: {\n    multiplier: 800,\n    option: {\n      color: \"#cc1034\",\n      fillColor: \"#cc1034\"\n    }\n  },\n  recovered: {\n    multiplier: 1200,\n    option: {\n      color: \"#7dd71d\",\n      fillColor: \"#7dd71d\"\n    }\n  },\n  deaths: {\n    multiplier: 2000,\n    option: {\n      color: \"#ff6c47\",\n      fillColor: \"#ff6c47\"\n    }\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n};\nexport const showDataOnMap = (data, casesType = \"cases\") => data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  fillOpacity: 0.4,\n  pathOptions: casesTypeColors[casesType].option,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  children: /*#__PURE__*/_jsxDEV(Popup, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IM A POPUP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 5\n}, this));","map":{"version":3,"sources":["/Projects/covid-tracker/covid-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","multiplier","option","color","fillColor","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,GADP;AAELC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,SAAS,EAAE;AAA/B;AAFH,GADe;AAKtBC,EAAAA,SAAS,EAAE;AACTJ,IAAAA,UAAU,EAAE,IADH;AAETC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,SAAS,EAAE;AAA/B;AAFC,GALW;AAStBE,EAAAA,MAAM,EAAE;AACNL,IAAAA,UAAU,EAAE,IADN;AAENC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,SAAS,EAAE;AAA/B;AAFF;AATc,CAAxB;AAeA,OAAO,MAAMG,QAAQ,GAAGC,IAAI,IAAI;AAC9B,QAAMC,UAAU,GAAG,CAAC,GAAGD,IAAJ,CAAnB;AAEA,SAAOC,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACX,KAAF,GAAUY,CAAC,CAACZ,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAApD,CAAP;AACD,CAJM;AAMP,OAAO,MAAMa,aAAa,GAAG,CAACL,IAAD,EAAOM,SAAS,GAAG,OAAnB,KAC3BN,IAAI,CAACO,GAAL,CAASC,OAAO,iBACd,QAAC,MAAD;AACE,EAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADV;AAEE,EAAA,WAAW,EAAE,GAFf;AAGE,EAAA,WAAW,EAAEpB,eAAe,CAACe,SAAD,CAAf,CAA2BZ,MAH1C;AAIE,EAAA,MAAM,EACJkB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAAgCf,eAAe,CAACe,SAAD,CAAf,CAA2Bb,UAL/D;AAAA,yBAQE,QAAC,KAAD;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,QADF,CADK","sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n  cases: {\n    multiplier: 800,\n    option: { color: \"#cc1034\", fillColor: \"#cc1034\" }\n  },\n  recovered: {\n    multiplier: 1200,\n    option: { color: \"#7dd71d\", fillColor: \"#7dd71d\" }\n  },\n  deaths: {\n    multiplier: 2000,\n    option: { color: \"#ff6c47\", fillColor: \"#ff6c47\" }\n  }\n};\n\nexport const sortData = data => {\n  const sortedData = [...data];\n\n  return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\n};\n\nexport const showDataOnMap = (data, casesType = \"cases\") =>\n  data.map(country => (\n    <Circle\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      fillOpacity={0.4}\n      pathOptions={casesTypeColors[casesType].option}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <h1>IM A POPUP</h1>\n      </Popup>\n    </Circle>\n  ));\n"]},"metadata":{},"sourceType":"module"}